/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  CommunicationChannel: "email" | "sms" | "voice" | "web"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  AllowedModification: { // root type
    v2?: string | null; // String
  }
  App: { // root type
    activeTo?: string | null; // String
    allowedModification?: string | null; // String
    category?: string | null; // String
    description?: string | null; // String
    iconURL?: string | null; // String
    instanceId?: number | null; // Int
    productGroup?: string | null; // String
    productId?: string | null; // String
    productName?: string | null; // String
    status?: string | null; // String
  }
  AppSlot: { // root type
    appSlot?: Array<NexusGenRootTypes['AppSlotItem'] | null> | null; // [AppSlotItem]
  }
  AppSlotItem: { // root type
    allowedModification?: string | null; // String
    apps?: NexusGenRootTypes['AppsContainer'] | null; // AppsContainer
    assignedAppId?: string | null; // String
    productId?: string | null; // String
    productName?: string | null; // String
    type?: string | null; // String
  }
  Approval: { // root type
    approvalCheckboxName?: string | null; // String
    approved: boolean; // Boolean!
    communicationChannels?: NexusGenRootTypes['CommunicationChannels'] | null; // CommunicationChannels
    isApprovalSettable?: boolean | null; // Boolean
    isChannelSettable?: boolean | null; // Boolean
    name: string; // String!
    validFrom?: string | null; // String
  }
  Approvals: { // root type
    approval: Array<NexusGenRootTypes['Approval'] | null>; // [Approval]!
  }
  AppsContainer: { // root type
    app?: Array<NexusGenRootTypes['App'] | null> | null; // [App]
  }
  BonusSlot: { // root type
    activeTo?: string | null; // String
    allowedModification?: string | null; // String
    category?: string | null; // String
    description?: string | null; // String
    iconURL?: string | null; // String
    instanceId?: number | null; // Int
    productId?: string | null; // String
    productName?: string | null; // String
    status?: string | null; // String
    type?: string | null; // String
  }
  ChargeUnit: { // root type
    chargeQuantity?: number | null; // Int
    chargeUnit?: string | null; // String
    chargeValue?: number | null; // Float
    chargeValueWithVAT?: number | null; // Float
  }
  CommunicationChannels: { // root type
    communicationChannel: Array<NexusGenEnums['CommunicationChannel'] | null>; // [CommunicationChannel]!
  }
  Email: { // root type
    BPEmail?: string | null; // String
    eInvoiceEmail?: string | null; // String
    zekVerificationStatus?: string | null; // String
  }
  EntireResponse: { // root type
    subscriber?: NexusGenRootTypes['Subscriber'] | null; // Subscriber
  }
  Framework: { // root type
    id?: string | null; // ID
    name?: string | null; // String
  }
  PriceLevel: { // root type
    isActive?: boolean | null; // Boolean
    isEnabled?: boolean | null; // Boolean
    priceList?: string | null; // String
    priceWithVAT?: number | null; // Float
  }
  ProductPromotion: { // root type
    actionLabel?: string | null; // String
    backgroundColour?: string | null; // String
    backgroundColourType?: string | null; // String
    backgroundImageURL?: string | null; // String
    content?: string | null; // String
    header?: string | null; // String
    nboStory?: string | null; // String
    offerRestrictedPeriod?: number | null; // Int
    priority?: number | null; // Int
    promoExternalId?: string | null; // String
    promoGroup?: string | null; // String
    promotionAnswer?: Array<NexusGenRootTypes['PromotionAnswer'] | null> | null; // [PromotionAnswer]
    promotionId?: string | null; // String
    source?: string | null; // String
    subHeader?: string | null; // String
    text?: string | null; // String
  }
  ProductPromotions: { // root type
    productPromotion: Array<NexusGenRootTypes['ProductPromotion'] | null>; // [ProductPromotion]!
  }
  PromotionAnswer: { // root type
    displayValue?: string | null; // String
    id?: string | null; // String
    priority?: number | null; // Int
  }
  Query: {};
  Service: { // root type
    activateOn?: string | null; // String
    activationCode?: string | null; // String
    allowedModification?: NexusGenRootTypes['AllowedModification'] | null; // AllowedModification
    instanceId?: number | null; // Int
    isMultiInstance?: boolean | null; // Boolean
    listPriceWithVAT?: number | null; // Float
    listPriority?: number | null; // Int
    period?: string | null; // String
    priceLevels?: Array<NexusGenRootTypes['PriceLevel'] | null> | null; // [PriceLevel]
    priceWithVAT?: number | null; // Float
    productId?: string | null; // String
    productName?: string | null; // String
    protectionPeriodEndDate?: string | null; // String
    serviceGroup?: string | null; // String
    status?: string | null; // String
    type?: string | null; // String
    validTo?: string | null; // String
  }
  ServicesAndUsage: { // root type
    lastRoamingZone?: number | null; // Int
    service?: Array<NexusGenRootTypes['Service'] | null> | null; // [Service]
    usageAt?: string | null; // String
    usageSummary?: NexusGenRootTypes['UsageSummary'] | null; // UsageSummary
  }
  Settings: { // root type
    hasDigitalBox?: boolean | null; // Boolean
    hasEbillBillMediaType?: boolean | null; // Boolean
    hasInvoicePaymentCharge?: boolean | null; // Boolean
    hasMktForMobappDisabled?: boolean | null; // Boolean
  }
  SsoAccount: { // root type
    otp?: string | null; // String
    otpValidTo?: string | null; // String
  }
  Subscriber: { // root type
    activationDate?: string | null; // String
    assetLastUpdatedAt?: string | null; // String
    BACuRefNo?: number | null; // Int
    BAName?: string | null; // String
    billCycleId?: string | null; // String
    billMediaType?: string | null; // String
    BPCuRefNo?: number | null; // Int
    BPFirstName?: string | null; // String
    daysTillEndOfBC?: number | null; // Int
    eligibleForApp?: boolean | null; // Boolean
    email?: NexusGenRootTypes['Email'] | null; // Email
    endOfBC?: string | null; // String
    hasMoreBillingArrangements?: string | null; // String
    hasMoreSubscribers?: string | null; // String
    isBusinessSegment?: boolean | null; // Boolean
    isChangedTariffInCurrentBc?: boolean | null; // Boolean
    msisdn?: number | null; // Int
    scratchDay?: string | null; // String
    selfServiceManagement?: boolean | null; // Boolean
    settings?: NexusGenRootTypes['Settings'] | null; // Settings
    startOfBC?: string | null; // String
    status?: string | null; // String
    statusDate?: string | null; // String
    statusReason?: string | null; // String
    subscriberId?: number | null; // Int
    subscriberType?: string | null; // String
    tariffs?: Array<NexusGenRootTypes['Tariff'] | null> | null; // [Tariff]
  }
  Tariff: { // root type
    includedSubscriptionSlots?: number | null; // Int
    status?: string | null; // String
    tariffId?: string | null; // String
    tariffName?: string | null; // String
    tariffType?: number | null; // Int
    tariffTypeEnum?: string | null; // String
  }
  UsageSummary: { // root type
    accummulatedCharges?: Array<NexusGenRootTypes['ChargeUnit'] | null> | null; // [ChargeUnit]
    priceAfterAppliedFU?: number | null; // Float
    priceAfterAppliedFUWithVAT?: number | null; // Float
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AllowedModification: { // field return type
    v2: string | null; // String
  }
  App: { // field return type
    activeTo: string | null; // String
    allowedModification: string | null; // String
    category: string | null; // String
    description: string | null; // String
    iconURL: string | null; // String
    instanceId: number | null; // Int
    productGroup: string | null; // String
    productId: string | null; // String
    productName: string | null; // String
    status: string | null; // String
  }
  AppSlot: { // field return type
    appSlot: Array<NexusGenRootTypes['AppSlotItem'] | null> | null; // [AppSlotItem]
  }
  AppSlotItem: { // field return type
    allowedModification: string | null; // String
    apps: NexusGenRootTypes['AppsContainer'] | null; // AppsContainer
    assignedAppId: string | null; // String
    productId: string | null; // String
    productName: string | null; // String
    type: string | null; // String
  }
  Approval: { // field return type
    approvalCheckboxName: string | null; // String
    approved: boolean; // Boolean!
    communicationChannels: NexusGenRootTypes['CommunicationChannels'] | null; // CommunicationChannels
    isApprovalSettable: boolean | null; // Boolean
    isChannelSettable: boolean | null; // Boolean
    name: string; // String!
    validFrom: string | null; // String
  }
  Approvals: { // field return type
    approval: Array<NexusGenRootTypes['Approval'] | null>; // [Approval]!
  }
  AppsContainer: { // field return type
    app: Array<NexusGenRootTypes['App'] | null> | null; // [App]
  }
  BonusSlot: { // field return type
    activeTo: string | null; // String
    allowedModification: string | null; // String
    category: string | null; // String
    description: string | null; // String
    iconURL: string | null; // String
    instanceId: number | null; // Int
    productId: string | null; // String
    productName: string | null; // String
    status: string | null; // String
    type: string | null; // String
  }
  ChargeUnit: { // field return type
    chargeQuantity: number | null; // Int
    chargeUnit: string | null; // String
    chargeValue: number | null; // Float
    chargeValueWithVAT: number | null; // Float
  }
  CommunicationChannels: { // field return type
    communicationChannel: Array<NexusGenEnums['CommunicationChannel'] | null>; // [CommunicationChannel]!
  }
  Email: { // field return type
    BPEmail: string | null; // String
    eInvoiceEmail: string | null; // String
    zekVerificationStatus: string | null; // String
  }
  EntireResponse: { // field return type
    subscriber: NexusGenRootTypes['Subscriber'] | null; // Subscriber
  }
  Framework: { // field return type
    id: string | null; // ID
    name: string | null; // String
  }
  PriceLevel: { // field return type
    isActive: boolean | null; // Boolean
    isEnabled: boolean | null; // Boolean
    priceList: string | null; // String
    priceWithVAT: number | null; // Float
  }
  ProductPromotion: { // field return type
    actionLabel: string | null; // String
    backgroundColour: string | null; // String
    backgroundColourType: string | null; // String
    backgroundImageURL: string | null; // String
    content: string | null; // String
    header: string | null; // String
    nboStory: string | null; // String
    offerRestrictedPeriod: number | null; // Int
    priority: number | null; // Int
    promoExternalId: string | null; // String
    promoGroup: string | null; // String
    promotionAnswer: Array<NexusGenRootTypes['PromotionAnswer'] | null> | null; // [PromotionAnswer]
    promotionId: string | null; // String
    source: string | null; // String
    subHeader: string | null; // String
    text: string | null; // String
  }
  ProductPromotions: { // field return type
    productPromotion: Array<NexusGenRootTypes['ProductPromotion'] | null>; // [ProductPromotion]!
  }
  PromotionAnswer: { // field return type
    displayValue: string | null; // String
    id: string | null; // String
    priority: number | null; // Int
  }
  Query: { // field return type
    approvalsQuery: NexusGenRootTypes['Approvals']; // Approvals!
    appSlotsQuery: Array<NexusGenRootTypes['AppSlot'] | null>; // [AppSlot]!
    bonusSlots: Array<NexusGenRootTypes['BonusSlot'] | null> | null; // [BonusSlot]
    frameworks: Array<NexusGenRootTypes['Framework'] | null> | null; // [Framework]
    productPromotionsQuery: NexusGenRootTypes['ProductPromotions']; // ProductPromotions!
    servicesAndUsageQuery: NexusGenRootTypes['ServicesAndUsage']; // ServicesAndUsage!
    ssoAccountQuery: NexusGenRootTypes['SsoAccount']; // SsoAccount!
    subscriberQuery: NexusGenRootTypes['EntireResponse']; // EntireResponse!
  }
  Service: { // field return type
    activateOn: string | null; // String
    activationCode: string | null; // String
    allowedModification: NexusGenRootTypes['AllowedModification'] | null; // AllowedModification
    instanceId: number | null; // Int
    isMultiInstance: boolean | null; // Boolean
    listPriceWithVAT: number | null; // Float
    listPriority: number | null; // Int
    period: string | null; // String
    priceLevels: Array<NexusGenRootTypes['PriceLevel'] | null> | null; // [PriceLevel]
    priceWithVAT: number | null; // Float
    productId: string | null; // String
    productName: string | null; // String
    protectionPeriodEndDate: string | null; // String
    serviceGroup: string | null; // String
    status: string | null; // String
    type: string | null; // String
    validTo: string | null; // String
  }
  ServicesAndUsage: { // field return type
    lastRoamingZone: number | null; // Int
    service: Array<NexusGenRootTypes['Service'] | null> | null; // [Service]
    usageAt: string | null; // String
    usageSummary: NexusGenRootTypes['UsageSummary'] | null; // UsageSummary
  }
  Settings: { // field return type
    hasDigitalBox: boolean | null; // Boolean
    hasEbillBillMediaType: boolean | null; // Boolean
    hasInvoicePaymentCharge: boolean | null; // Boolean
    hasMktForMobappDisabled: boolean | null; // Boolean
  }
  SsoAccount: { // field return type
    otp: string | null; // String
    otpValidTo: string | null; // String
  }
  Subscriber: { // field return type
    activationDate: string | null; // String
    assetLastUpdatedAt: string | null; // String
    BACuRefNo: number | null; // Int
    BAName: string | null; // String
    billCycleId: string | null; // String
    billMediaType: string | null; // String
    BPCuRefNo: number | null; // Int
    BPFirstName: string | null; // String
    daysTillEndOfBC: number | null; // Int
    eligibleForApp: boolean | null; // Boolean
    email: NexusGenRootTypes['Email'] | null; // Email
    endOfBC: string | null; // String
    hasMoreBillingArrangements: string | null; // String
    hasMoreSubscribers: string | null; // String
    isBusinessSegment: boolean | null; // Boolean
    isChangedTariffInCurrentBc: boolean | null; // Boolean
    msisdn: number | null; // Int
    scratchDay: string | null; // String
    selfServiceManagement: boolean | null; // Boolean
    settings: NexusGenRootTypes['Settings'] | null; // Settings
    startOfBC: string | null; // String
    status: string | null; // String
    statusDate: string | null; // String
    statusReason: string | null; // String
    subscriberId: number | null; // Int
    subscriberType: string | null; // String
    tariffs: Array<NexusGenRootTypes['Tariff'] | null> | null; // [Tariff]
  }
  Tariff: { // field return type
    includedSubscriptionSlots: number | null; // Int
    status: string | null; // String
    tariffId: string | null; // String
    tariffName: string | null; // String
    tariffType: number | null; // Int
    tariffTypeEnum: string | null; // String
  }
  UsageSummary: { // field return type
    accummulatedCharges: Array<NexusGenRootTypes['ChargeUnit'] | null> | null; // [ChargeUnit]
    priceAfterAppliedFU: number | null; // Float
    priceAfterAppliedFUWithVAT: number | null; // Float
  }
}

export interface NexusGenFieldTypeNames {
  AllowedModification: { // field return type name
    v2: 'String'
  }
  App: { // field return type name
    activeTo: 'String'
    allowedModification: 'String'
    category: 'String'
    description: 'String'
    iconURL: 'String'
    instanceId: 'Int'
    productGroup: 'String'
    productId: 'String'
    productName: 'String'
    status: 'String'
  }
  AppSlot: { // field return type name
    appSlot: 'AppSlotItem'
  }
  AppSlotItem: { // field return type name
    allowedModification: 'String'
    apps: 'AppsContainer'
    assignedAppId: 'String'
    productId: 'String'
    productName: 'String'
    type: 'String'
  }
  Approval: { // field return type name
    approvalCheckboxName: 'String'
    approved: 'Boolean'
    communicationChannels: 'CommunicationChannels'
    isApprovalSettable: 'Boolean'
    isChannelSettable: 'Boolean'
    name: 'String'
    validFrom: 'String'
  }
  Approvals: { // field return type name
    approval: 'Approval'
  }
  AppsContainer: { // field return type name
    app: 'App'
  }
  BonusSlot: { // field return type name
    activeTo: 'String'
    allowedModification: 'String'
    category: 'String'
    description: 'String'
    iconURL: 'String'
    instanceId: 'Int'
    productId: 'String'
    productName: 'String'
    status: 'String'
    type: 'String'
  }
  ChargeUnit: { // field return type name
    chargeQuantity: 'Int'
    chargeUnit: 'String'
    chargeValue: 'Float'
    chargeValueWithVAT: 'Float'
  }
  CommunicationChannels: { // field return type name
    communicationChannel: 'CommunicationChannel'
  }
  Email: { // field return type name
    BPEmail: 'String'
    eInvoiceEmail: 'String'
    zekVerificationStatus: 'String'
  }
  EntireResponse: { // field return type name
    subscriber: 'Subscriber'
  }
  Framework: { // field return type name
    id: 'ID'
    name: 'String'
  }
  PriceLevel: { // field return type name
    isActive: 'Boolean'
    isEnabled: 'Boolean'
    priceList: 'String'
    priceWithVAT: 'Float'
  }
  ProductPromotion: { // field return type name
    actionLabel: 'String'
    backgroundColour: 'String'
    backgroundColourType: 'String'
    backgroundImageURL: 'String'
    content: 'String'
    header: 'String'
    nboStory: 'String'
    offerRestrictedPeriod: 'Int'
    priority: 'Int'
    promoExternalId: 'String'
    promoGroup: 'String'
    promotionAnswer: 'PromotionAnswer'
    promotionId: 'String'
    source: 'String'
    subHeader: 'String'
    text: 'String'
  }
  ProductPromotions: { // field return type name
    productPromotion: 'ProductPromotion'
  }
  PromotionAnswer: { // field return type name
    displayValue: 'String'
    id: 'String'
    priority: 'Int'
  }
  Query: { // field return type name
    approvalsQuery: 'Approvals'
    appSlotsQuery: 'AppSlot'
    bonusSlots: 'BonusSlot'
    frameworks: 'Framework'
    productPromotionsQuery: 'ProductPromotions'
    servicesAndUsageQuery: 'ServicesAndUsage'
    ssoAccountQuery: 'SsoAccount'
    subscriberQuery: 'EntireResponse'
  }
  Service: { // field return type name
    activateOn: 'String'
    activationCode: 'String'
    allowedModification: 'AllowedModification'
    instanceId: 'Int'
    isMultiInstance: 'Boolean'
    listPriceWithVAT: 'Float'
    listPriority: 'Int'
    period: 'String'
    priceLevels: 'PriceLevel'
    priceWithVAT: 'Float'
    productId: 'String'
    productName: 'String'
    protectionPeriodEndDate: 'String'
    serviceGroup: 'String'
    status: 'String'
    type: 'String'
    validTo: 'String'
  }
  ServicesAndUsage: { // field return type name
    lastRoamingZone: 'Int'
    service: 'Service'
    usageAt: 'String'
    usageSummary: 'UsageSummary'
  }
  Settings: { // field return type name
    hasDigitalBox: 'Boolean'
    hasEbillBillMediaType: 'Boolean'
    hasInvoicePaymentCharge: 'Boolean'
    hasMktForMobappDisabled: 'Boolean'
  }
  SsoAccount: { // field return type name
    otp: 'String'
    otpValidTo: 'String'
  }
  Subscriber: { // field return type name
    activationDate: 'String'
    assetLastUpdatedAt: 'String'
    BACuRefNo: 'Int'
    BAName: 'String'
    billCycleId: 'String'
    billMediaType: 'String'
    BPCuRefNo: 'Int'
    BPFirstName: 'String'
    daysTillEndOfBC: 'Int'
    eligibleForApp: 'Boolean'
    email: 'Email'
    endOfBC: 'String'
    hasMoreBillingArrangements: 'String'
    hasMoreSubscribers: 'String'
    isBusinessSegment: 'Boolean'
    isChangedTariffInCurrentBc: 'Boolean'
    msisdn: 'Int'
    scratchDay: 'String'
    selfServiceManagement: 'Boolean'
    settings: 'Settings'
    startOfBC: 'String'
    status: 'String'
    statusDate: 'String'
    statusReason: 'String'
    subscriberId: 'Int'
    subscriberType: 'String'
    tariffs: 'Tariff'
  }
  Tariff: { // field return type name
    includedSubscriptionSlots: 'Int'
    status: 'String'
    tariffId: 'String'
    tariffName: 'String'
    tariffType: 'Int'
    tariffTypeEnum: 'String'
  }
  UsageSummary: { // field return type name
    accummulatedCharges: 'ChargeUnit'
    priceAfterAppliedFU: 'Float'
    priceAfterAppliedFUWithVAT: 'Float'
  }
}

export interface NexusGenArgTypes {
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}